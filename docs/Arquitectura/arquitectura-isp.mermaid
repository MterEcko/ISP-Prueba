erDiagram
    Client ||--o{ ClientNetworkConfig : has
    Client ||--o| ClientBilling : has
    Client ||--o{ ClientSupport : has
    Client ||--o{ ClientNetwork : has
    Client ||--o{ ClientDocument : has
    Client ||--o{ ClientInstallation : has
    Client ||--o{ CommunicationContact : has
    Client ||--o{ CommunicationLog : has
    Client ||--o{ CommunicationEvent : has
    Client ||--o{ Device : has
    Client ||--o{ Subscription : has
    Client ||--o{ Ticket : has
    Client ||--o{ Inventory : has
    Client ||--o{ MikrotikPPPOE : has
    Client ||--o{ MikrotikIp : has
    Client ||--o{ Invoice : has
    Client ||--o{ Payment : has
    Client ||--o{ PaymentReminder : has
    Client ||--o{ NotificationQueue : has
    MikrotikRouter ||--o{ ClientNetworkConfig : configures
    MikrotikRouter ||--o{ MikrotikPPPOE : configures
    MikrotikRouter ||--o{ IpPool : manages
    MikrotikRouter ||--o{ MikrotikProfile : configures
    ServicePackage ||--o{ ClientBilling : provides
    ServicePackage ||--o{ Subscription : provides
    ServicePackage ||--o{ MikrotikProfile : defines
    IpPool ||--o{ ClientBilling : assigns
    IpPool ||--o{ Subscription : assigns
    IpPool ||--o{ MikrotikIp : contains
    Ticket ||--o{ ClientSupport : references
    Ticket ||--o{ ClientInstallation : references
    Ticket ||--o{ TicketComment : has
    Ticket ||--o{ TicketAttachment : has
    Ticket ||--o{ InstallationMaterial : uses
    Ticket ||--o{ InventoryScrap : references
    CommonCommand ||--o{ CommandImplementation : implements
    DeviceBrand ||--o{ CommandImplementation : belongs
    DeviceBrand ||--o{ DeviceFamily : has
    DeviceBrand ||--o{ SnmpOid : has
    DeviceFamily ||--o{ CommandImplementation : belongs
    DeviceFamily ||--o{ SnmpOid : has
    Device ||--o{ CommandHistory : executes
    Device ||--o{ ClientNetwork : connects
    Device ||--o| DeviceCredential : has
    Device ||--o{ DeviceMetric : has
    Device ||--o| MikrotikRouter : is
    Device ||--o| Sector : is
    User ||--o{ CommandHistory : performs
    User ||--o{ Ticket : assigns
    User ||--o{ Ticket : creates
    User ||--o{ TicketComment : creates
    User ||--o{ InventoryMovement : performs
    User ||--o{ InventoryScrap : generates
    Zone ||--o{ Client : locates
    Zone ||--o{ Node : contains
    Zone ||--o{ IpPool : manages
    Zone ||--o{ ServicePackage : defines
    Node ||--o{ Client : locates
    Node ||--o{ Device : locates
    Node ||--o{ Sector : contains
    Node ||--o{ MikrotikRouter : locates
    Sector ||--o{ Client : locates
    Sector ||--o{ Device : locates
    CommunicationChannel ||--o{ CommunicationLog : uses
    CommunicationChannel ||--o{ MessageTemplate : supports
    CommunicationChannel ||--o{ NotificationQueue : uses
    MessageTemplate ||--o{ CommunicationLog : references
    MessageTemplate ||--o{ NotificationRule : defines
    MessageTemplate ||--o{ NotificationQueue : schedules
    CommandImplementation ||--o{ CommandParameter : has
    Role ||--o{ User : assigns
    Role ||--o{ Permission : has
    Permission ||--o{ Role : grants
    InventoryLocation ||--o{ Inventory : stores
    InventoryLocation ||--o{ InventoryMovement : from
    InventoryLocation ||--o{ InventoryMovement : to
    InventoryLocation ||--o{ InventoryLocation : parent
    InventoryCategory ||--o{ InventoryType : categorizes
    InventoryType ||--o{ InventoryProduct : classifies
    InventoryProduct ||--o{ Inventory : represents
    Inventory ||--o{ InventoryMovement : tracks
    Inventory ||--o{ InstallationMaterial : uses
    Inventory ||--o{ InventoryScrap : scraps
    Invoice ||--o{ Payment : bills
    Invoice ||--o{ PaymentReminder : triggers
    Subscription ||--o{ Invoice : generates
    TicketType ||--o{ Ticket : categorizes
    NotificationRule ||--o{ NotificationQueue : triggers
    PaymentGateway ||--o{ Payment : processes
    DeviceCommand ||--o{ Device : configures

    Client {
        int id PK
        string firstName
        string lastName
        string email
        string phone
        string whatsapp
        string address
        float latitude
        float longitude
        date birthDate
        date startDate
        boolean active
        text notes
        int zoneId FK
        int nodeId FK
        int sectorId FK
        string contractNumber
        enum serviceType
    }

    ClientNetworkConfig {
        int id PK
        int clientId FK
        int mikrotikRouterId FK
        string pppoeUsername
        string pppoePasswordEncrypted
        string staticIp
        string macAddress
        string gateway
        string dnsPrimary
        string dnsSecondary
        enum protocol
        json additionalConfig
        date lastSync
    }

    ClientBilling {
        int id PK
        int clientId FK
        int servicePackageId FK
        int currentIpPoolId FK
        enum clientStatus
        int billingDay
        date lastPaymentDate
        date nextDueDate
        decimal monthlyFee
        enum paymentMethod
        int graceDays
        decimal penaltyFee
    }

    ClientSupport {
        int id PK
        int clientId FK
        int ticketId FK
        string issueType
        text description
        enum status
        json photos
        json comments
        text resolutionNotes
        date resolvedAt
    }

    ClientNetwork {
        int id PK
        int clientId FK
        int deviceId FK
        string pppoeUserId
        string pppoeUsername
        string pppoeProfile
        string qosRuleId
        int downloadSpeed
        int uploadSpeed
        boolean burstEnabled
        string staticIp
        string macAddress
        enum protocol
        date lastCheck
        enum status
        bigint lastTrafficIn
        bigint lastTrafficOut
        text notes
    }

    ClientDocument {
        int id PK
        int clientId FK
        string type
        string filename
        string path
        date uploadDate
        string description
    }

    ClientInstallation {
        int id PK
        int clientId FK
        int ticketId FK
        string title
        text description
        json photos
        json equipmentInstalled
        json materialsUsed
        date installationDate
        text technicianNotes
    }

    CommandImplementation {
        int id PK
        int commonCommandId FK
        int brandId FK
        int familyId FK
        enum type
        text implementation
        json parameterConfig
        text script
        text expectedResponse
        json errorHandling
        boolean active
    }

    CommandHistory {
        int id PK
        int deviceId FK
        int userId FK
        string command
        json parameters
        json result
        text error
        boolean success
        float executionTime
        enum connectionType
        string ipAddress
        enum severity
        json metadata
    }

    DeviceCommand {
        int id PK
        enum brand
        enum deviceType
        string commandName
        text description
        text sshCommand
        string snmpOid
        enum snmpMode
        string snmpDataType
        text responseParser
        text expectedResponse
        boolean requiresConfirmation
        boolean affectsService
        int permissionLevel
        enum commandType
        text parameters
        text script
        text errorHandling
        int timeout
        int retries
        boolean active
        enum category
        string family
        string version
        int priority
        text tags
        text documentation
        date lastTested
        float successRate
    }

    Device {
        int id PK
        string name
        enum type
        enum brand
        string model
        string ipAddress
        string macAddress
        string serialNumber
        int nodeId FK
        int clientId FK
        string firmwareVersion
        boolean isFiberDevice
        enum status
        date lastSeen
        string location
        float latitude
        float longitude
        text notes
        json connectionParams
        json monitoringData
        json specificConfig
        json metadata
    }

    CommonCommand {
        int id PK
        string name
        text description
        string category
        boolean requiresConfirmation
        boolean affectsService
        int permissionLevel
    }

    CommunicationContact {
        int id PK
        int clientId FK
        enum contactType
        string contactValue
        boolean isPreferred
        boolean verified
        date verifiedAt
        json preferences
        boolean optIn
        date optInDate
        date optOutDate
        text notes
    }

    DeviceBrand {
        int id PK
        string name
        text description
        string imageUrl
        boolean active
    }

    CommunicationChannel {
        int id PK
        string name
        enum channelType
        boolean active
        json configuration
    }

    CommunicationLog {
        int id PK
        int clientId FK
        int channelId FK
        int templateId FK
        string recipient
        string subject
        text messageSent
        enum status
        text errorMessage
        json gatewayResponse
        date sentAt
        date deliveredAt
    }

    CommandParameter {
        int id PK
        int implementationId FK
        string name
        enum type
        text description
        string defaultValue
        boolean required
        string validation
        int order
    }

    CommunicationEvent {
        int id PK
        string eventType
        string entityType
        int entityId
        int clientId FK
        json eventData
        boolean processed
        date processedAt
        int notificationsTriggered
        enum priority
    }

    DeviceCredential {
        int id PK
        int deviceId FK
        enum connectionType
        string username
        string password
        int port
        string apiKey
        string sshKeyPath
        enum snmpVersion
        string snmpCommunity
        enum snmpSecurityLevel
        enum snmpAuthProtocol
        string snmpAuthKey
        enum snmpPrivProtocol
        string snmpPrivKey
        boolean isActive
        date lastUsed
        date rotationDate
        text notes
        json additionalConfig
    }

    InventoryProduct {
        int id PK
        int typeId FK
        string brand
        string model
        string partNumber
        text description
        decimal purchasePrice
        decimal salePrice
        int warrantyMonths
        json specifications
        boolean active
    }

    InventoryCategory {
        int id PK
        string name
        text description
        boolean active
    }

    InventoryMovement {
        int id PK
        int inventoryId FK
        enum type
        int quantity
        string reason
        text notes
        string reference
        date movementDate
        int fromLocationId FK
        int toLocationId FK
        int movedById FK
    }

    Inventory {
        int id PK
        string name
        string brand
        string model
        string serialNumber
        string macAddress
        enum status
        int quantity
        text description
        date purchaseDate
        decimal cost
        date warrantyUntil
        text notes
        int locationId FK
        int clientId FK
        int productId FK
    }

    DeviceMetric {
        int id PK
        int deviceId FK
        float cpuUsage
        float memoryUsage
        float diskUsage
        bigint uptime
        json interfaceTraffic
        json connectionQuality
        json technologySpecificMetrics
        json opticalMetrics
        float latency
        float packetLoss
        json bandwidth
        enum collectionMethod
        date recordedAt
        enum status
        json metadata
    }

    DeviceFamily {
        int id PK
        int brandId FK
        string name
        text description
        boolean active
    }

    InventoryLocation {
        int id PK
        string name
        enum type
        text description
        string address
        boolean active
        int parentId FK
    }

    InstallationMaterial {
        int id PK
        int ticketId FK
        int itemId FK
        decimal quantityUsed
        decimal scrapGenerated
        enum usageType
        text notes
        date usedAt
    }

    MikrotikProfile {
        int id PK
        int mikrotikRouterId FK
        int servicePackageId FK
        string profileId
        string profileName
        string rateLimit
        string burstLimit
        string burstThreshold
        string burstTime
        string priority
        json additionalSettings
        boolean active
        date lastSync
    }

    MikrotikRouter {
        int id PK
        int deviceId FK
        int nodeId FK
        string name
        string ipAddress
        string username
        string passwordEncrypted
        int apiPort
        string systemIdentity
        string routerModel
        string routerosVersion
        boolean active
        date lastSync
    }

    Node {
        int id PK
        string name
        string location
        float latitude
        float longitude
        text description
        boolean active
        int zoneId FK
    }

    Invoice {
        int id PK
        int clientId FK
        int subscriptionId FK
        string invoiceNumber
        date billingPeriodStart
        date billingPeriodEnd
        decimal amount
        decimal taxAmount
        decimal totalAmount
        date dueDate
        enum status
        json invoiceData
    }

    InventoryType {
        int id PK
        int categoryId FK
        string name
        text description
        enum unitType
        boolean hasSerial
        boolean hasMac
        boolean trackableIndividually
        decimal defaultScrapPercentage
    }

    InventoryScrap {
        int id PK
        int inventoryId FK
        decimal originalQuantity
        decimal usedQuantity
        decimal scrapQuantity
        string scrapReason
        date scrapDate
        int technicianId FK
        int ticketId FK
        decimal costImpact
        decimal efficiency
        enum unitType
        decimal scrapThreshold
        boolean autoGenerated
        text notes
    }

    MessageTemplate {
        int id PK
        int channelId FK
        string name
        string subject
        text messageBody
        enum templateType
        json variables
        boolean active
    }

    IpPool {
        int id PK
        int zoneId FK
        int mikrotikRouterId FK
        string poolId
        string poolName
        string networkAddress
        string startIp
        string endIp
        string gateway
        string dnsPrimary
        string dnsSecondary
        enum poolType
        boolean active
        string ranges
        date lastSyncWithMikrotik
    }

    MikrotikIp {
        int id PK
        int ipPoolId FK
        string ipAddress
        int clientId FK
        int mikrotikPPPOEId FK
        enum status
        string mikrotikId
        string macAddress
        string hostname
        date lastSeen
        string comment
    }

    MikrotikPPPOE {
        int id PK
        int mikrotikRouterId FK
        int clientId FK
        int subscriptionId FK
        string username
        string passwordEncrypted
        string profileId
        string currentProfileName
        string poolId
        string currentPoolName
        string staticIp
        string mikrotikUserId
        enum status
        date lastConnected
        date lastDisconnected
        string uptime
        bigint bytesIn
        bigint bytesOut
        date lastSyncWithMikrotik
    }

    Role {
        int id PK
        string name
        string description
        int level
        string category
    }

    ServicePackage {
        int id PK
        string name
        text description
        decimal price
        int downloadSpeedMbps
        int uploadSpeedMbps
        int dataLimitGb
        enum billingCycle
        int zoneId FK
        boolean active
    }

    Sector {
        int id PK
        string name
        text description
        string frequency
        int azimuth
        string polarization
        boolean active
        int nodeId FK
        int deviceId FK
    }

    Payment {
        int id PK
        int invoiceId FK
        int clientId FK
        int gatewayId FK
        string paymentReference
        decimal amount
        enum paymentMethod
        enum status
        text gatewayResponse
        date paymentDate
        json paymentData
        date processedAt
    }

    NotificationRule {
        int id PK
        string name
        enum eventType
        json triggerCondition
        enum channelType
        int templateId FK
        int delayMinutes
        boolean active
        enum priority
    }

    NotificationQueue {
        int id PK
        int clientId FK
        int channelId FK
        int templateId FK
        int ruleId FK
        string recipient
        text messageData
        date scheduledFor
        enum status
        int attempts
        int maxAttempts
        date processedAt
        text result
        enum priority
    }

    PaymentReminder {
        int id PK
        int clientId FK
        int invoiceId FK
        enum reminderType
        enum status
        int daysOverdue
        text messageSent
        date sentAt
    }

    Permission {
        int id PK
        string name
        string description
        string module
    }

    PaymentGateway {
        int id PK
        string name
        enum gatewayType
        string country
        boolean active
        boolean isDefault
        json configuration
    }

    TicketType {
        int id PK
        string name
        text description
        enum category
        int estimatedDurationHours
        boolean requiresMaterials
        boolean active
    }

    User {
        int id PK
        string username
        string email
        string password
        string fullName
        boolean active
        date lastLogin
        int roleId FK
    }

    SnmpOid {
        int id PK
        int brandId FK
        int familyId FK
        string name
        text description
        string oid
        string dataType
        enum mode
        string unit
        string conversion
    }

    SystemConfiguration {
        int id PK
        string configKey
        text configValue
        enum configType
        string module
        string description
        boolean active
    }

    SystemPlugin {
        int id PK
        string name
        string version
        boolean active
        json configuration
        date installedAt
        json pluginTables
        json pluginRoutes
    }

    Subscription {
        int id PK
        int clientId FK
        int servicePackageId FK
        int currentIpPoolId FK
        date startDate
        date endDate
        enum status
        string pppoeUsername
        string pppoePassword
        string assignedIpAddress
        string mikrotikProfileName
        decimal monthlyFee
        int billingDay
        date lastPaymentDate
        date nextDueDate
        int graceDays
        date lastStatusChange
        boolean autoManagement
        text notes
    }

    Ticket {
        int id PK
        string title
        text description
        enum status
        enum priority
        string category
        int ticketTypeId FK
        int clientId FK
        int assignedToId FK
        int createdById FK
        date scheduledDate
        time scheduledTime
        text resolutionNotes
        date resolvedAt
        date closedAt
        decimal estimatedCost
        decimal actualCost
    }

    SystemLicense {
        int id PK
        string licenseKey
        enum planType
        int clientLimit
        boolean active
        date expiresAt
        json featuresEnabled
    }

    TicketAttachment {
        int id PK
        int ticketId FK
        string filename
        string filePath
        enum attachmentType
        text description
        date uploadedAt
    }

    TicketComment {
        int id PK
        int ticketId FK
        int userId FK
        text content
        boolean isInternal
    }

    Zone {
        int id PK
        string name
        text description
        float latitude
        float longitude
        boolean active
    }